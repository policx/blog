<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>program on 数字人生</title>
    <link>https://blog.policx.com/categories/program/</link>
    <description>Recent content in program on 数字人生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>heal@policx.com (江湖)</managingEditor>
    <webMaster>heal@policx.com (江湖)</webMaster>
    <lastBuildDate>Thu, 29 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.policx.com/categories/program/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 桌面进化史</title>
      <link>https://blog.policx.com/posts/linuxdesktop/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/linuxdesktop/</guid>
      <description>本周 Linux 刚刚迎来它的 28 岁生日。自 20 世纪 90 年代初期以来，Linux 桌面也已从简单的窗口管理器发展为成熟、完整的桌面。那么它究竟是如何一步步发展至</description>
    </item>
    
    <item>
      <title>Python导图</title>
      <link>https://blog.policx.com/posts/python-mind/</link>
      <pubDate>Sun, 21 Jul 2019 14:03:24 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python-mind/</guid>
      <description>推荐：XMind 一个全功能的思维导图和头脑风暴软件。 Python应用领域和数据结构 *点击图片查看原文 Python 系列 (一) 核心知识 *点击图片查看原文 核</description>
    </item>
    
    <item>
      <title>《Python札记》1_列表list</title>
      <link>https://blog.policx.com/posts/python3-notes01/</link>
      <pubDate>Thu, 18 Jul 2019 22:55:41 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python3-notes01/</guid>
      <description>写于开始之前 笔者即将开始写一个系列的《Python札记》。本系列的札记主要是自学齐伟老师《跟老齐学Python轻松入门》一书整理而来。书第一</description>
    </item>
    
    <item>
      <title>Flutter的环境配置 for Mac</title>
      <link>https://blog.policx.com/posts/flutter/</link>
      <pubDate>Tue, 16 Jul 2019 18:14:18 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/flutter/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近Flutter已经疯狂的刷屏了各个技术博客、技术网站，完全有一统天下的气势。所以最近也决定开始尝尝鲜，从零开始一步步的来探索Flutter的世界。就从环境搭建开始，记录一下自己探索Flutter的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python爬虫</title>
      <link>https://blog.policx.com/posts/spider/</link>
      <pubDate>Mon, 15 Jul 2019 10:06:04 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/spider/</guid>
      <description>现在Python语言大火，在网络爬虫、人工智能、大数据等领域都有很好的应用。今天我向大家介绍一下Python爬虫的一些知识和常用类库的用法，</description>
    </item>
    
    <item>
      <title>git如何删除已经提交的文件夹</title>
      <link>https://blog.policx.com/posts/git-del/</link>
      <pubDate>Mon, 17 Sep 2018 16:02:32 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/git-del/</guid>
      <description>在上传项目到github时,忘记忽略了某个文件夹.idea,就直接push上去了, 最后意识到了此问题,决定删除掉远程仓库中的.idea文件夹</description>
    </item>
    
    <item>
      <title>Python利用openpyxl来操作Excel</title>
      <link>https://blog.policx.com/posts/python-excel/</link>
      <pubDate>Tue, 19 Jun 2018 16:39:16 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python-excel/</guid>
      <description>自动化的工作是为了从繁琐重复的劳动中挣脱出来，把精力用在数据分析上。自动化方面python是在好不过了，不过既然要提交报表， 就不免要美观什么</description>
    </item>
    
    <item>
      <title>python操作excel的包(openpyxl、xlsxwriter)</title>
      <link>https://blog.policx.com/posts/python-writer/</link>
      <pubDate>Sun, 17 Jun 2018 18:28:27 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python-writer/</guid>
      <description>现在支持python操作excel的包有下列这些 官网上最推荐的是openpyxl，其他包支持较老的excel版本。 xlsxwriter无法对</description>
    </item>
    
    <item>
      <title>python3 与 MongoDB 之间的交互</title>
      <link>https://blog.policx.com/posts/pymongo/</link>
      <pubDate>Wed, 02 May 2018 15:27:47 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/pymongo/</guid>
      <description>MongoDB是由C++语言编写的非关系型数据库，是一个基于分布式文件存储的开源数据库系统，其内容存储形式类似JSON对象，它的字段值可以包</description>
    </item>
    
    <item>
      <title>MongoDB</title>
      <link>https://blog.policx.com/posts/mongodb/</link>
      <pubDate>Wed, 02 May 2018 14:11:11 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/mongodb/</guid>
      <description>MongoDB是一个跨平台，面向文档的数据库，提供高性能，高可用性和易于扩展。MongoDB是工作在集合和文档上一种概念。 数据库 数据库是一个</description>
    </item>
    
    <item>
      <title>python3 与 MySQL 之间的交互</title>
      <link>https://blog.policx.com/posts/pymysql/</link>
      <pubDate>Wed, 02 May 2018 11:14:27 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/pymysql/</guid>
      <description>什么是 PyMySQL？ PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中则使用mysqldb。 PyMySQL 遵循 Python 数据库 API v2.0 规范，并包含了 pure-Python MySQL 客户</description>
    </item>
    
    <item>
      <title>Django笔记</title>
      <link>https://blog.policx.com/posts/django-bi-ji/</link>
      <pubDate>Wed, 18 Apr 2018 01:00:16 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/django-bi-ji/</guid>
      <description>Django是一个开放源代码的Web应用框架，由Python写成。采用了MTV的框架模式，即模型M，视图V和模版T。它最初是被开发来用于管理</description>
    </item>
    
    <item>
      <title>Django部署——uwsgi&#43;Nginx</title>
      <link>https://blog.policx.com/posts/django/</link>
      <pubDate>Tue, 17 Apr 2018 17:42:04 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/django/</guid>
      <description>用Django写了个小网站，只能在自己本地跑一跑！这怎么行？听说可以部署在云服务器上，这样别人就可以访问了! 环境： python3.6 centos 7 Django1.11 1、本地跑起来Dj</description>
    </item>
    
    <item>
      <title>Markdown 的设计哲学</title>
      <link>https://blog.policx.com/posts/markdown/</link>
      <pubDate>Thu, 22 Mar 2018 19:32:01 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/markdown/</guid>
      <description>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 主要内容 Markdown</description>
    </item>
    
    <item>
      <title>数据类型和变量</title>
      <link>https://blog.policx.com/posts/python-type/</link>
      <pubDate>Thu, 01 Mar 2018 04:28:19 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python-type/</guid>
      <description>Python 数据类型和变量 数据类型 计算机顾名思义就是可以做数学计算的机器，因此，计算机程序理所当然地可以处理各种数值。但是，计算机能处理的远不止数值，</description>
    </item>
    
    <item>
      <title>字典、列表、数组和字符串</title>
      <link>https://blog.policx.com/posts/python/</link>
      <pubDate>Fri, 16 Feb 2018 12:28:24 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/python/</guid>
      <description>Python 字典、列表、数组和字符串 字典 1 2 3 4 5 6 7 # -*- coding: UTF-8 -*- dict_1 = {&amp;#39;1&amp;#39;: &amp;#39;a&amp;#39;, &amp;#39;2&amp;#39;: &amp;#39;b&amp;#39;, &amp;#39;3&amp;#39;: &amp;#39;c&amp;#39;} print(dict_1) # 打印字典 print(type(dict_1)) # 打印新赋值的字典的类型 print(str(dict_1), end=&amp;#39;字符串\n&amp;</description>
    </item>
    
    <item>
      <title>HTTP状态码汇总</title>
      <link>https://blog.policx.com/posts/http/</link>
      <pubDate>Tue, 06 Feb 2018 16:32:20 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/http/</guid>
      <description>HTTP状态码 HTTP状态码（英语：HTTP Status Code）是用以表示网页服务器超文本传输协议响应状态的3位数字代码。它由 RFC 2616 规范定义的，并得到</description>
    </item>
    
    <item>
      <title>连续启动 crash 自修复技术实现与原理解析</title>
      <link>https://blog.policx.com/posts/crash/</link>
      <pubDate>Tue, 06 Feb 2018 15:21:18 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/crash/</guid>
      <description>前言 实现原理 优化：降低50%以上误报机率 对原有API设计的几点优化意见 机制状态应当用枚举来做为API透出 关键数值应当做为初始化参数供用户设置</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://blog.policx.com/posts/nginx/</link>
      <pubDate>Sat, 03 Feb 2018 17:11:38 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/nginx/</guid>
      <description>什么是Nginx? Nginx (engine x) 是一款轻量级的Web 服务器 、反向代理服务器及电子邮件（IMAP/POP3）代理服务器。 什么是反向代理？ 反向代理（Re</description>
    </item>
    
    <item>
      <title>避免使用 GCD Global队列创建Runloop常驻线程</title>
      <link>https://blog.policx.com/posts/gcd-global/</link>
      <pubDate>Wed, 06 Sep 2017 19:30:00 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/gcd-global/</guid>
      <description>本文对应 Demo 以及 Markdown 文件在仓库中，文中的错误可以提 PR 到这个文件，我会及时更改。 目录 避免使用 GCD Global队列创建Runloop常驻线程 GCD Glob</description>
    </item>
    
    <item>
      <title>有一种 Block 叫 Callback，有一种 Callback 叫 CompletionHandler</title>
      <link>https://blog.policx.com/posts/block-callback/</link>
      <pubDate>Mon, 06 Feb 2017 19:07:03 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/block-callback/</guid>
      <description>iOS10推送部分的API，大量使用了 CompletionHandler 这种命名方式，那么本文我们将对比下这种 Block 的特殊性，以便更好的理解和在自己的项目中实践 CompletionHandler 样式的 Blco</description>
    </item>
    
    <item>
      <title>深入剖析-iOS-编译-Clang---LLVM</title>
      <link>https://blog.policx.com/posts/clang-llvm/</link>
      <pubDate>Sat, 18 Jun 2016 09:58:47 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/clang-llvm/</guid>
      <description>前言 2000年，伊利诺伊大学厄巴纳－香槟分校（University of Illinois at Urbana-Champaign 简称UIUC）这所享有世界声望的一流公立研究型大学的 Chris Lattne</description>
    </item>
    
    <item>
      <title>iOS函数响应式编程以及ReactiveCocoa的使用</title>
      <link>https://blog.policx.com/posts/ios-han/</link>
      <pubDate>Sat, 18 Jun 2016 09:55:45 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-han/</guid>
      <description>打算在项目中大面积使用RAC来开发，所以整理一些常用的实践范例和比较完整的api说明方便开发时随时查阅 * 声明式编程泛型Declarative</description>
    </item>
    
    <item>
      <title>GPU处理图像</title>
      <link>https://blog.policx.com/posts/gpu/</link>
      <pubDate>Sat, 18 Jun 2016 09:53:56 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/gpu/</guid>
      <description>Shader着色器 Shader出现在OpenGL ES 2.0中，允许创建自己的Shader。必须同时创建两个Shader，分别是Vertex sh</description>
    </item>
    
    <item>
      <title>Camera</title>
      <link>https://blog.policx.com/posts/camera/</link>
      <pubDate>Sat, 18 Jun 2016 09:48:48 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/camera/</guid>
      <description>相机原理 感光度(ISO) ISO也叫胶卷速度，衡量图像传感器对光的敏感程度。亮的时候需要的ISO就越小，暗的时候相反ISO就高噪点会多。 光圈 光</description>
    </item>
    
    <item>
      <title>iOS字符串 </title>
      <link>https://blog.policx.com/posts/ios-string/</link>
      <pubDate>Sat, 18 Jun 2016 09:44:49 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-string/</guid>
      <description>搜索 在一个字符串中搜索子字符串 最灵活的方法 - (NSRange)rangeOfString:(NSString *)aString options:(NSStringCompareOptions)mask range:(NSRange)searchRange locale:(NSLocale *)locale 格式化字符串 3个方法 -initWithFormat: -initWithFormat:arguments: +stringWithFormat: 整数 可以同时工作在32位和64位的 uint64_t p = 2305843009213693951; NSString *s = [NSString stringWithFormat:@&amp;quot;The ninth Mersenne prime</description>
    </item>
    
    <item>
      <title>构建iOS稳定应用架构时方案选择的思考</title>
      <link>https://blog.policx.com/posts/gou-jian/</link>
      <pubDate>Sat, 18 Jun 2016 09:38:01 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/gou-jian/</guid>
      <description>工程结构架构，减少耦合混乱以及防治需求大改造成结构重构，如何构建稳定可扩展可变换的工程结构的思考 我打算采用Information flow的方</description>
    </item>
    
    <item>
      <title>iOS设计模式</title>
      <link>https://blog.policx.com/posts/ios-design-pattern/</link>
      <pubDate>Sat, 18 Jun 2016 09:35:39 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-design-pattern/</guid>
      <description>iOS 设计模式 MVC Model：模型 View：视图 Controller：控制器 单例 单例使用懒加载方式在第一次实例时创建，如[NSUserDefaul</description>
    </item>
    
    <item>
      <title>iOS Background Tasks</title>
      <link>https://blog.policx.com/posts/ios-background-tasks/</link>
      <pubDate>Sat, 18 Jun 2016 09:34:46 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-background-tasks/</guid>
      <description>三种方式使得iOS程序即使在关闭或崩溃的情况下也能够在后台持续进行一些任务，比如更新程序界面快照，下载文件等。这三个方法分别是Backgro</description>
    </item>
    
    <item>
      <title>Block</title>
      <link>https://blog.policx.com/posts/block/</link>
      <pubDate>Sat, 18 Jun 2016 09:33:55 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/block/</guid>
      <description>简介 block可以当做匿名函数，可以在两个对象间将语句当做数据来进行传递。具有封闭性closure，方便取得上下文相关状态信息。 Block的</description>
    </item>
    
    <item>
      <title>CFRunLoop </title>
      <link>https://blog.policx.com/posts/cfrunloop/</link>
      <pubDate>Sat, 18 Jun 2016 09:30:21 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/cfrunloop/</guid>
      <description>简介 简单的说run loop是事件驱动的一个大循环，如下代码所示 int main(int argc, char * argv[]) { //程序一直运行状态 while (AppIsRunning) { //睡眠状态，等待唤醒事件 id whoWakesMe = SleepForWakingUp(); //</description>
    </item>
    
    <item>
      <title>细说GCD（Grand Central Dispatch）如何用</title>
      <link>https://blog.policx.com/posts/gcd/</link>
      <pubDate>Sat, 18 Jun 2016 09:28:07 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/gcd/</guid>
      <description>文中较详细介绍GCD队列，各种GCD使用方法，实例如何使用Dispatch Source监听系统底层对象，分析不同锁的性能对比，实例GCD死锁</description>
    </item>
    
    <item>
      <title>iOS并发编程</title>
      <link>https://blog.policx.com/posts/ios-bing-fa/</link>
      <pubDate>Sat, 18 Jun 2016 07:06:03 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-bing-fa/</guid>
      <description>线程 使用Instruments的CPU strategy view查看代码如何在多核CPU中执行。创建线程可以使用POSIX 线程API，或者NSThread（</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://blog.policx.com/posts/linux/</link>
      <pubDate>Sun, 06 Mar 2016 09:20:42 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/linux/</guid>
      <description>   </description>
    </item>
    
    <item>
      <title>iOS界面元素指南</title>
      <link>https://blog.policx.com/posts/ios-zhinan/</link>
      <pubDate>Tue, 23 Feb 2016 23:41:25 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-zhinan/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GIT</title>
      <link>https://blog.policx.com/posts/git/</link>
      <pubDate>Tue, 26 Jan 2016 10:21:17 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/git/</guid>
      <description>同生活中的许多伟大事件一样，Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花</description>
    </item>
    
    <item>
      <title>iOS-制作Framework</title>
      <link>https://blog.policx.com/posts/framework/</link>
      <pubDate>Thu, 31 Dec 2015 22:04:46 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/framework/</guid>
      <description>前言 之前有很多的大神们已经写过framework的制作，但最近由于Xcode7的出现，很多之前的教程内容已经不符，对于初学者来说，找到一篇能</description>
    </item>
    
    <item>
      <title>centos 6.5 网站建设</title>
      <link>https://blog.policx.com/posts/centos/</link>
      <pubDate>Mon, 10 Nov 2014 16:10:27 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/centos/</guid>
      <description>Step 1、为centos配置rpmforge及epel源。centos官方的源其实也够用，不过像php的一些扩展如 php-mcrypt在官方源中</description>
    </item>
    
    <item>
      <title>iOS开发内存泄露修复</title>
      <link>https://blog.policx.com/posts/ios-neicun/</link>
      <pubDate>Sat, 07 Jun 2014 16:22:37 +0000</pubDate>
      <author>heal@policx.com (江湖)</author>
      <guid>https://blog.policx.com/posts/ios-neicun/</guid>
      <description>一：写在前面 请使用ARC！！！ 如果使用的第三方库不支持ARC机制，可以在target-&amp;gt;build phase-&amp;gt;compile sources中选择对应的源码文件</description>
    </item>
    
  </channel>
</rss>
